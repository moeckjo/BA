stages:
  - build

.build-push:
  stage: build
  tags:
    - arm64
  image: docker:20.10.7
  services:
    - name: docker:20.10.7-dind
      command: ["--insecure-registry=iik-rhino-05.fzi.de:5000"]
  before_script:
    - apk add --no-cache
      bash
      docker
      docker-compose
      git
      netcat-openbsd
      curl
  variables:
    DOCKER_TLS_CERTDIR: ""

build-push-dev:
  extends: .build-push
  except:
##    - master
    - tags
    - jmo
  script:
    # Build and push only images for services defined. Base images will be pulled from registry.
    - echo "Changes between ... $(bash get_services_with_changes.sh)"
    - echo "n" "$(bash get_services_with_changes.sh | tail -n1)"  | bash build_images.sh
    - echo "Built images =  $(cat built_images)"
    - bash push_images.sh built_images
    - rm built_images

#build-push-deploy:
#  extends: .build-push
#  only:
#    - master
#  script:
#    # Build all images, including the base images first.
#    - echo "y" "all" | bash build_images.sh
#    - echo "Built images =  $(cat built_images)"
#    - bash push_images.sh built_images
#    - rm built_images


#.build:
#  stage: build
#  only:
#    - master
#  image: docker:20.10.7
#  services:
#    - docker:20.10.7-dind
#  variables:
#    DOCKER_TLS_CERTDIR: ""
##  before_script:
##    - apk add --no-cache
##        bash
##        docker-compose
##  script:
##     Build docker images
##    - echo "y" | bash build_images.sh
##    - bash build_all_images_new.sh
##    - export
##    # Setup SSH key agent
##    - if [ -n "$SSH_PRIVATE_KEY" ]; then
##        eval $(ssh-agent -s);
##        echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null;
##      fi
##    # Obtain access to docker registry using SSH port forwarding
##    - if [ -n "$SSH_PRIVATE_KEY" ]; then
##        ssh
##            -4
##            -F .gitlab-ci/ssh/config
##            -o UserKnownHostsFile=.gitlab-ci/ssh/known_hosts
##            -fNT
##            -L 5000:127.0.0.1:5000
##            iik-rhino-05.fzi.de;
##      fi
#    # Push docker images to registry
#    # TODO: Implement proper pushing logic
#    #- if [ -n "$SSH_PRIVATE_KEY" ]; then
#    #    docker image push --all-tags;
#    #  fi
#
#build:amd64:
#  extends: .build
#  tags:
#    - amd64
#    - docker
#    - docker-privileged
#
#build:arm64:
#  extends: .build
#  tags:
#    - arm64
#    - docker
#    - docker-privileged
